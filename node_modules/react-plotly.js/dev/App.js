import React, {Component} from 'react';
import {hot} from 'react-hot-loader';
import createPlotComponent from '../src/factory';

const Plot = createPlotComponent(Plotly);

class App extends Component {

  constructor(props){
    super(props);
    this.state = {
      y: [1],
    }


    this.data = {
      type: 'scatter',
      mode: 'points',
      marker: {color: 'blue'}
    }

     this.limitData = {
      type: 'scatter',
      mode: 'line',
      x:[0,20],
      y:[2,2]
    }

     this.layout = {
      dragmode: 'select',
      width: 640,
      height: 480
    }

    this.addData = () => {
      this.setState(prevState => ({y: [...prevState.y, Math.random()]}));
    }

    this.resetData = () => {
      this.setState({y: [1]})
    }

    this.streamData = () => {
      const timer = setInterval(() => this.addData(), 1000);
      this.setState(prevState => ({...prevState, timer}));
    }

    this.stopData = () => {
      clearInterval(this.state.timer);
    }
  }


  render(){
    return (
      <div>

        <div>
          <button onClick={this.streamData}> Add data </button>
          <button onClick={this.stopData}> Stop </button>
          <button onClick={this.resetData}> Reset </button>
        </div>
        <Plot
          data={[{...this.data, y: this.state.y}, this.limitData]}
          layout={this.layout}
          onRestyle={this.state.y.length % 2 ? undefined: console.log}
          onRelayout={this.state.y.length % 2 ? undefined: console.log}
          onAfterPlot={this.state.y.length % 2 ? undefined: console.log}
          onAnimatingFrame={this.state.y.length % 2 ? undefined: console.log}
          onFramework={this.state.y.length % 2 ? undefined: console.log}
          onSliderChange={this.state.y.length % 2 ? undefined: console.log}
        />
      </div>
 );
  }
}

export default hot(module)(App);
